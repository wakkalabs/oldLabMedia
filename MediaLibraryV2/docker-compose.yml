version: "3.9"

networks:
  wireguard:
    name: wireguard

services:
  wireguard:
    container_name: wireguard
    image: lscr.io/linuxserver/wireguard:v1.0.20210914-ls75
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    env_file:
      - ./.env
    environment:
      - ALLOWEDIPS=0.0.0.0/0
      - TZ=America/Chicago
      - LOG_CONFS=true
      - PUID=1000
      - PGID=1000
    networks:
      - wireguard
    ports:
      - 51194/udp
    volumes:
      - /lib/modules:/lib/modules:rw
      - ./config:/config:rw
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    privileged: true


  autoscan:
    container_name: autoscan
    image: cr.hotio.dev/hotio/autoscan
    ports:
      - "3030:3030"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
      - PLEX_LOGIN=awakka
      - PLEX_PASSWORD=bKKb4552
    volumes:
      - /opt/docker/appdata/autoscan:/config
      - /mnt/nfs/media:/data
    network_mode: bridge


  overseerr:
    container_name: overseerr
    image: cr.hotio.dev/hotio/overseerr:latest
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /opt/docker/appdata/overseer:/config
      - /mnt/nfs:/data
    network_mode: bridge
  swag:
    image: lscr.io/linuxserver/swag:latest
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - URL=hiveunderground.com
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
    volumes:
      - /opt/docker/appdata/swag:/config
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped
  lidarr:
    container_name: lidarr
    image: cr.hotio.dev/hotio/lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /opt/docker/appdata/lidarr:/config
      - /mnt/nfs:/data
    network_mode: "service:wireguard"

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:develop
    # Comment this if vpn is disabled
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /opt/docker/appdata/prowlarr:/config
      - /mnt/nfs:/data
    network_mode: "service:wireguard"

  radarr:
    container_name: radarr
    image: cr.hotio.dev/hotio/radarr:release
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /opt/docker/appdata/radarr:/config
      - /mnt/nfs:/data
    network_mode: "service:wireguard"

  sonarr:
    container_name: sonarr
    image: cr.hotio.dev/hotio/sonarr:release
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /opt/docker/appdata/sonarr:/config
      - /mnt/nfs:/data
    network_mode: "service:wireguard"

  bazarr:
    container_name: bazarr
    image: cr.hotio.dev/hotio/bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /opt/docker/appdata/bazaar:/config
      - /mnt/nfs:/data
    network_mode: "service:wireguard"

  unpackerr:
    container_name: unpackerr
    image: cr.hotio.dev/hotio/unpackerr:release
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /opt/docker/appdata/unpackerr:/config
      - /mnt/nfs:/data
    network_mode: bridge


  recyclarr:
    image: ghcr.io/recyclarr/recyclarr:latest
    container_name: recyclarr
    init: true
    user: 1000:1000
    volumes:
      - /opt/docker/appdata/recyclarr:/config
      - /mnt/nfs:/data
    environment:
      - TZ=America/Chicago
    network_mode: bridge

  tautulli:
    container_name: tautulli
    image: cr.hotio.dev/hotio/tautulli
    ports:
      - "8181:8181"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /opt/docker/appdata/tautulli:/config
      - /mnt/nfs:/data
    network_mode: bridge

  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
     - LOG_LEVEL=${LOG_LEVEL:-info}
     - LOG_HTML=${LOG_HTML:-false}
     - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
     - TZ=America/Chicago
    network_mode: "service:wireguard"
    restart: unless-stopped

  transmission:
    image: linuxserver/transmission:latest
    network_mode: "service:wireguard"
    environment:
      - PUID=1000
      - PGID=1000
      - TRANSMISSION_WEB_UI=flood-for-transmission
      - TZ=America\Chicago
      - TRANSMISSION_WEB_HOME=/transmissionic/
    env_file:
      - ./.env
    volumes:
      - /opt/docker/appdata/transmission:/config
      - /mnt/nfs/torrents/:/downloads

  notifiarr:
    container_name: notifiarr
    hostname: "ac-notifiarr"
    image: golift/notifiarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    # Create the network
    # Create a network called "my_network" with the driver "bridge" and subnet 
      - 5454:5454
    environment:
      - TZ=America/Chicago
    volumes:
      - /opt/docker/appdata/notifiarr:/config
      - /var/run/utmp:/var/run/utmp
      # optional, only needed if you want to count users
    privileged: true
    network_mode: bridge